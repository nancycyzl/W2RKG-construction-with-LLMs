You can use regular expression to extract the required information from the text. Here's how you can modify your existing dictionary to store the extracted data:

```python
import re

w2r = {"waste": [], "transforming_process": [], "transformed_resource": []}

text = """
        w2r = {"waste": [], "transforming_process": [], "transformed_resource": []}
        text = "The pyrolysis and co-pyrolysis characteristics of large abundant bio-wastes, namely date pits (DP), peanut shells (PS), coffee grounds (CG), and tea waste (TW) were investigated in detail. The TG/DTG and pyrolysis procedures were used to examine the thermal pyrolysis behavior of these agro-wastes and their blends (50%CG/50%DP, 50%CG/50%PS, 50%DP/50%PS, 50%TW/50% DP,50%TW/50%PS and 50%CG/50% TW by weight). The characterization of these feedstock has shown their suitability for energy and material valorization. Experiments were carried out in a batch pyrolysis at a medium heating rate of 10 °C/min. The goal was to identify the best combination aiming to produce either char or hydrogen-rich gas, which can contribute to the development of the circular bio-economy. It was demonstrated that pyrolysis favored the liquid product, fluctuating from 34.31% (TW) to 50.92% (DP), while the co-pyrolysis greatly increased the gaseous product, which ranged between 42.02% (TW-DP) and 55.17% (PS-TW). The blending of CG and PS resulted in heightened reactivity, leading to an enhanced generation of H2 (34.44%). The optimal mixture was found to be CG-TW, showcasing superior performance in terms of gas quality (38.39% H2) and yield (53.74%). This outcome underscores the potential of CG and TW as a synergistic blend for efficient hydrogen-rich gas production. The FTIR findings revealed that the recovered biochars have the potential to serve as solid fuels, biofertilizers, or carbon materials. Additionally, they could be used as eco-friendly precursors for chemical and related industries. By analyzing various waste mixtures and their respective pyrolysis properties, this research aims to contribute to the development of sustainable waste management practices as well as efficient energy and material production methods. 
        """

# Extracting data
waste = re.findall(r'\(DP\)|\(PS\)|\(CG\)|\(TW\)', text)
transforming_process = ["Pyrolysis", "Co-pyrolysis"]
transformed_resource = ["Liquid product", "Gaseous product", "Biochars"]

# Adding extracted data to the dictionary
for item in waste:
    if item not in w2r["waste"]:
        w2r["waste"].append(item)
        
print(w2r)    
```

----------

```python
# ...

w2r = {"waste": [], "transforming_process": [], "transformed_resource": []}
text = """
        ...
"""

waste_words = ["lignocellulosic wastes", "pine sawdust (PSD)", "pretreated wheat straw and PSD", "waste residues"]
transforming_process_words = ["hydrolytic enzyme production", "solid-state fermentation", "optimization using response surface methodology (RSM)"]
transformed_resource_words = ["carbohydrate-active enzymes (CAZymes)", "cellulases, xylanases, and β-glucosidases", "reducing sugar yields"]

w2r["waste"] = waste_words
w2r["transforming_process"] = transforming_process_words
w2r["transformed_resource"] = transformed_resource_words

print(w2r)
```

----------

w2r["waste"].append("sorghum waste")
w2r["transforming_process"].extend(["one-pot synthesis", "anion-exchange adsorbent synthesis"])
w2r["transformed_resource"].append("MI-Cl-FDU-12 anion-exchange adsorbent")

----------

```python
# Extracting information from the text
import re

waste = []
transforming_processes = ["anaerobic digestion (AD)", "co-digestion"]
transformed_resources = ["biogas", "CH4"]

# Regular expression pattern to extract specific phrases
pattern = r"([A-Z][a-z]+ [A-Z][a-z]+) and ([A-Z][a-z]+ biomass)|([A-Z][a-z]+ production)|([A-Z][a-z]+ production)|([Bb]iofuel|Waste valorization)"

# Searching for the pattern in the text
matches = re.findall(pattern, text)

# Adding extracted information to the dictionaries
for match in matches:
    if len(match) == 4:  # Biogas or CH4 production
        transformed_resources.append(match[3])
    elif "bioremediation" in [str(x).lower() for x in match]:  # Waste valorization and bioremediation
        transforming_processes.append("bioremediation")
```

----------

